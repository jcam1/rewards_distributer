/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Holder, HolderInterface } from "../Holder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "distributeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "distributeFlow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105f53803806105f5833981810160405281019061003291906100cf565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610154565b6000815190506100c98161013d565b92915050565b600080604083850312156100e257600080fd5b60006100f0858286016100ba565b9250506020610101858286016100ba565b9150509250929050565b60006101168261011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101468161010b565b811461015157600080fd5b50565b610492806101636000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80637287396f14610030575b600080fd5b61003861003a565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663400ff8a1336040518263ffffffff1660e01b81526004016100969190610348565b60206040518083038186803b1580156100ae57600080fd5b505afa1580156100c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e691906102de565b90506000811161012b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101229061038c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016101a8929190610363565b602060405180830381600087803b1580156101c257600080fd5b505af11580156101d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fa91906102b5565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb93210833836040518363ffffffff1660e01b8152600401610256929190610363565b600060405180830381600087803b15801561027057600080fd5b505af1158015610284573d6000803e3d6000fd5b5050505050565b60008151905061029a8161042e565b92915050565b6000815190506102af81610445565b92915050565b6000602082840312156102c757600080fd5b60006102d58482850161028b565b91505092915050565b6000602082840312156102f057600080fd5b60006102fe848285016102a0565b91505092915050565b610310816103bd565b82525050565b6000610323601e836103ac565b915061032e82610405565b602082019050919050565b610342816103fb565b82525050565b600060208201905061035d6000830184610307565b92915050565b60006040820190506103786000830185610307565b6103856020830184610339565b9392505050565b600060208201905081810360008301526103a581610316565b9050919050565b600082825260208201905092915050565b60006103c8826103db565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f546865726520617265206e6f20617661696c61626c6520616d6f756e74730000600082015250565b610437816103cf565b811461044257600080fd5b50565b61044e816103fb565b811461045957600080fd5b5056fea2646970667358221220d3556ba172865732159e8b30148ca6e429a7fe2fc8d59c3bcb34bedd8668a5e464736f6c63430008040033";

export class Holder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    distributeAddress: string,
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Holder> {
    return super.deploy(
      distributeAddress,
      tokenAddress,
      overrides || {}
    ) as Promise<Holder>;
  }
  getDeployTransaction(
    distributeAddress: string,
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      distributeAddress,
      tokenAddress,
      overrides || {}
    );
  }
  attach(address: string): Holder {
    return super.attach(address) as Holder;
  }
  connect(signer: Signer): Holder__factory {
    return super.connect(signer) as Holder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HolderInterface {
    return new utils.Interface(_abi) as HolderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Holder {
    return new Contract(address, _abi, signerOrProvider) as Holder;
  }
}
