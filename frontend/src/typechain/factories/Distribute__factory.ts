/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Distribute, DistributeInterface } from "../Distribute";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentAmount",
        type: "uint256",
      },
    ],
    name: "LogDistribute",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "LogResetRecipientAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LogSetOrAddRecipientAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LogSubtractRecipientAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getHolderContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getRecipientAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "recipientAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "resetRecipientAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holderContractAddress",
        type: "address",
      },
    ],
    name: "setHolderContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setOrAddRecipientAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "subtractRecipientAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014e6380380620014e6833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b6112da806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806371b442611161007157806371b442611461013e5780637eb2aad11461015a5780638da5cb5b1461018a57806392433818146101a8578063f2fde38b146101c4578063fb932108146101e0576100a9565b8063091af631146100ae5780630e9c6936146100ca578063400ff8a1146100e657806360a9f2a014610116578063715018a614610134575b600080fd5b6100c860048036038101906100c39190610e1b565b6101fc565b005b6100e460048036038101906100df9190610e1b565b610376565b005b61010060048036038101906100fb9190610df2565b6104f0565b60405161010d919061103f565b60405180910390f35b61011e610539565b60405161012b9190610f4d565b60405180910390f35b61013c6105df565b005b61015860048036038101906101539190610df2565b610667565b005b610174600480360381019061016f9190610df2565b610727565b604051610181919061103f565b60405180910390f35b61019261073f565b60405161019f9190610f4d565b60405180910390f35b6101c260048036038101906101bd9190610df2565b610768565b005b6101de60048036038101906101d99190610df2565b610884565b005b6101fa60048036038101906101f59190610e1b565b61097c565b005b610204610cbb565b73ffffffffffffffffffffffffffffffffffffffff1661022261073f565b73ffffffffffffffffffffffffffffffffffffffff1614610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f90610fdf565b60405180910390fd5b6102ca81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cc390919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f521c5c9599ebf590b51d9a64b20c6e7a13c6123ba167a12a87de723fb3fca42e8360405161036a919061103f565b60405180910390a35050565b61037e610cbb565b73ffffffffffffffffffffffffffffffffffffffff1661039c61073f565b73ffffffffffffffffffffffffffffffffffffffff16146103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990610fdf565b60405180910390fd5b61044481600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cd990919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f93b31a41bf0d9f8d0472042f2726e3313ba1733ac0699b0267b129a6e94f08de836040516104e4919061103f565b60405180910390a35050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610543610cbb565b73ffffffffffffffffffffffffffffffffffffffff1661056161073f565b73ffffffffffffffffffffffffffffffffffffffff16146105b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ae90610fdf565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105e7610cbb565b73ffffffffffffffffffffffffffffffffffffffff1661060561073f565b73ffffffffffffffffffffffffffffffffffffffff161461065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065290610fdf565b60405180910390fd5b6106656000610cef565b565b61066f610cbb565b73ffffffffffffffffffffffffffffffffffffffff1661068d61073f565b73ffffffffffffffffffffffffffffffffffffffff16146106e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da90610fdf565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610770610cbb565b73ffffffffffffffffffffffffffffffffffffffff1661078e61073f565b73ffffffffffffffffffffffffffffffffffffffff16146107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90610fdf565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f906f1e50b99558c2ad98e24825556105ce2f55bd4b8b48ee2ce83b0d2e69cb1d60405160405180910390a350565b61088c610cbb565b73ffffffffffffffffffffffffffffffffffffffff166108aa61073f565b73ffffffffffffffffffffffffffffffffffffffff1614610900576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f790610fdf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096790610f9f565b60405180910390fd5b61097981610cef565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a039061101f565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610a8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8590610fff565b60405180910390fd5b610ae081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cd990919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3384846040518463ffffffff1660e01b8152600401610b8293929190610f68565b602060405180830381600087803b158015610b9c57600080fd5b505af1158015610bb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd49190610e57565b610c13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0a90610fbf565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f78e4fb330b2c2f4531dc3e0375e85678702dd21a348f1bc1f93a6012fb8dfa9b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610caf919061103f565b60405180910390a35050565b600033905090565b60008183610cd1919061106b565b905092915050565b60008183610ce791906110c1565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610dc28161125f565b92915050565b600081519050610dd781611276565b92915050565b600081359050610dec8161128d565b92915050565b600060208284031215610e0457600080fd5b6000610e1284828501610db3565b91505092915050565b60008060408385031215610e2e57600080fd5b6000610e3c85828601610db3565b9250506020610e4d85828601610ddd565b9150509250929050565b600060208284031215610e6957600080fd5b6000610e7784828501610dc8565b91505092915050565b610e89816110f5565b82525050565b6000610e9c60268361105a565b9150610ea78261116c565b604082019050919050565b6000610ebf600f8361105a565b9150610eca826111bb565b602082019050919050565b6000610ee260208361105a565b9150610eed826111e4565b602082019050919050565b6000610f0560178361105a565b9150610f108261120d565b602082019050919050565b6000610f28601d8361105a565b9150610f3382611236565b602082019050919050565b610f4781611133565b82525050565b6000602082019050610f626000830184610e80565b92915050565b6000606082019050610f7d6000830186610e80565b610f8a6020830185610e80565b610f976040830184610f3e565b949350505050565b60006020820190508181036000830152610fb881610e8f565b9050919050565b60006020820190508181036000830152610fd881610eb2565b9050919050565b60006020820190508181036000830152610ff881610ed5565b9050919050565b6000602082019050818103600083015261101881610ef8565b9050919050565b6000602082019050818103600083015261103881610f1b565b9050919050565b60006020820190506110546000830184610f3e565b92915050565b600082825260208201905092915050565b600061107682611133565b915061108183611133565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110b6576110b561113d565b5b828201905092915050565b60006110cc82611133565b91506110d783611133565b9250828210156110ea576110e961113d565b5b828203905092915050565b600061110082611113565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f7420656e6f7567682062616c616e6365206c656674000000000000000000600082015250565b7f43616c6c656420627920696e656c696769626c6520636f6e7472616374000000600082015250565b611268816110f5565b811461127357600080fd5b50565b61127f81611107565b811461128a57600080fd5b50565b61129681611133565b81146112a157600080fd5b5056fea2646970667358221220dc9b934f665c3360be7226fb4a99655ee789040d731b9f237a9d0a272cea1bb964736f6c63430008040033";

export class Distribute__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Distribute> {
    return super.deploy(token, overrides || {}) as Promise<Distribute>;
  }
  getDeployTransaction(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  attach(address: string): Distribute {
    return super.attach(address) as Distribute;
  }
  connect(signer: Signer): Distribute__factory {
    return super.connect(signer) as Distribute__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributeInterface {
    return new utils.Interface(_abi) as DistributeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Distribute {
    return new Contract(address, _abi, signerOrProvider) as Distribute;
  }
}
